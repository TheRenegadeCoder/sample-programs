# This workflow will install Python dependencies, download Docker images, and test every script in the repo

name: Glotter

on:
  push:
    branches: [ main ]
    paths:
      - 'archive/**'
      - 'test/**'
      - '.glotter.yml'
      - '.github/workflows/test-suite.yml'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '!**/README.md'
  pull_request:
    branches:
      - 'main'

jobs:
  changed-files:
    name: "Changed Files"
    runs-on: ubuntu-latest

    outputs:
      status: ${{ steps.changed-files.outputs.any_changed }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    - name: Get changed code files
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        files_ignore: |
          **/*.md

  testing:
    name: "Test Suite"
    needs: changed-files
    if: needs.changed-files.outputs.status == 'true'

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.8.3"]
        os: [ubuntu-latest]
        num_batches: [6]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Poetry Image
      uses: abatilo/actions-poetry@v3
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Install Dependencies
      run: poetry install

    - name: Check for Bad Files
      run: poetry run glotter check

    - name: Download Docker images, Test All Sample Programs, Remove Docker Images
      run: poetry run glotter batch ${{ matrix.num_batches }}  --parallel --remove

    - name: Do nothing if no code changes
      run: echo "No code changes"
