# This program implements the fizz-buzz algorithm. It tests the math
# instructions

# Set up letters
0o00 ğŸ˜»ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ˜¾ğŸ™€ğŸ™€ Memory 0 = 0o106 (70 = 'F')
0o01 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜½ğŸ˜¹ğŸ™€ğŸ™€ Memory 1 = 0o151 (105 = 'i')
0o02 ğŸ˜»ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¿ğŸ˜ºğŸ™€ğŸ™€ Memory 2 = 0o172 (122 = 'z')
0o03 ğŸ˜»ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ˜ºğŸ™€ğŸ™€ Memory 3 = 0o102 (66 = 'B')
0o04 ğŸ˜»ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¾ğŸ˜½ğŸ™€ğŸ™€ Memory 4 = 0o165 (117 = 'u')
0o05 ğŸ˜»ğŸ˜¹ğŸ˜½ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ Memory 5 = 0o12 (10 = '\n')

# Set up constants
0o06 ğŸ˜»ğŸ˜¹ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 6 = 0 (n)
0o07 ğŸ˜»ğŸ˜¹ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ Memory 7 = 1
0o10 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ğŸ˜»ğŸ™€ğŸ™€ Memory 8 (0o10) = 3
0o11 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ğŸ˜½ğŸ™€ğŸ™€ Memory 9 (0o11) = 5

# Loop start: Increment n. If n > 100, exit
0o12 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¾ğŸ™€ğŸ™€ğŸ˜¿ğŸ™€ğŸ™€ Memory 6 += Memory 7 (increment n)
0o13 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ˜¼ğŸ™€ğŸ˜¿ Memory 10 (0o12) = -0o144 (-100)
0o14 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ Memory 10 (0o12) += Memory 6 (n - 100)
0o15 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜½ğŸ˜¼ğŸ™€ğŸ™€ If Memory 10 (0o12) > 0, jump to 0o55 (0o54 + 1) (if n > 100)

# Indicate no output
0o16 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 11 (0o13) = 0

# If n mod 3 is 0, output "Fizz" and indicate output
0o17 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 10 (0o12) = 0
0o20 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ Memory 10 (0o12) += Memory 6 (n)
0o21 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 12 (0o14) = 0
0o22 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ Memory 12 (0o14) += Memory 6 (n)
0o23 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ Memory 12 (0o14) /= Memory 8 (0o10) (3)
0o24 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¸ğŸ™€ğŸ™€ Memory 12 (0o14) *= Memory 8 (0o10) (3)
0o25 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ Memory 10 (0o12) -= Memory 12 (0o14) (n - floor(n / 3) * 3)
0o26 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜»ğŸ˜»ğŸ™€ğŸ™€ If Memory 10 (0o12) > 0, jump to 0o34 (0o33 + 1)
0o27 ğŸ˜½ğŸ˜¼ğŸ˜¸ğŸ™€ğŸ™€ Output Memory 0 ('F')
0o30 ğŸ˜½ğŸ˜¼ğŸ˜¹ğŸ™€ğŸ™€ Output Memory 1 ('i')
0o31 ğŸ˜½ğŸ˜¼ğŸ˜ºğŸ™€ğŸ™€ Output Memory 2 ('z')
0o32 ğŸ˜½ğŸ˜¼ğŸ˜ºğŸ™€ğŸ™€ Output Memory 2 ('z')
0o33 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ Memory 11 (0o13) = 1

# If n mod 5 is 0, output "Buzz" and indicate output
0o34 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 10 (0o12) = 0
0o35 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ Memory 10 (0o12) += Memory 6 (n)
0o36 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¸ğŸ™€ğŸ™€ Memory 12 (0o14) = 0
0o37 ğŸ˜¿ğŸ™€ğŸ˜¸ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¾ğŸ™€ğŸ™€ Memory 12 (0o14) += Memory 6 (n)
0o40 ğŸ˜¿ğŸ™€ğŸ˜¿ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ Memory 12 (0o14) /= Memory 9 (0o11) (floor(n / 5))
0o41 ğŸ˜¿ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€Memory 12 (0o14) *= Memory 9 (0o11) (floor(n / 5) * 5)
0o42 ğŸ˜¿ğŸ™€ğŸ˜ºğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜¹ğŸ˜¼ğŸ™€ğŸ™€ Memory 10 (0o12) -= Memory 12 (0o14) (n - floor(n / 5) * 5)
0o43 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜ºğŸ™€ğŸ™€ğŸ˜½ğŸ˜¸ğŸ™€ğŸ™€ If Memory 10 (0o12) > 0, jump to 0o51 (0o50 + 1)
0o44 ğŸ˜½ğŸ˜¼ğŸ˜»ğŸ™€ğŸ™€ Output Memory 3 ('B')
0o45 ğŸ˜½ğŸ˜¼ğŸ˜¼ğŸ™€ğŸ™€ Output Memory 4 ('u')
0o46 ğŸ˜½ğŸ˜¼ğŸ˜ºğŸ™€ğŸ™€ Output Memory 2 ('z')
0o47 ğŸ˜½ğŸ˜¼ğŸ˜ºğŸ™€ğŸ™€ Output Memory 2 ('z')
0o50 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜¹ğŸ™€ğŸ™€ Memory 11 (0o13) = 1

# If no output, output n as value
0o51 ğŸ˜½ğŸ˜¿ğŸ˜¹ğŸ˜»ğŸ™€ğŸ™€ğŸ˜½ğŸ˜ºğŸ™€ğŸ™€ If Memory 11 (0o13) > 0, jump to 0o53 (0o52 + 1)
0o52 ğŸ˜¼ğŸ˜¼ğŸ˜¾ğŸ™€ğŸ™€ Output Memory 6 (n) as value

# Output newline
0o53 ğŸ˜½ğŸ˜¼ğŸ˜½ğŸ™€ğŸ™€ Output Memory 5 ('\n')

# Jump to Loop start
0o54 ğŸ˜»ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ˜¿ğŸ˜¹ğŸ˜¹ğŸ™€ğŸ™€ Jump to 0o12 (0o11 + 1)

0o55 ğŸ™€ğŸ™€ Exit
