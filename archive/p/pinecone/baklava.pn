repeatStr :: {n: Int, c: String} -> {String}: (
    s: ""
    i: 0 | i < in.n | i: i + 1 @ (
        s: s + in.c
    )

    s
)

i: 0 - 10 | i <= 10 | i: i + 1 @ (
    numSpaces: i
    i < 0 ? (
        numSpaces: 0 - i
    )
    print: (repeatStr: numSpaces, " ") + (repeatStr: 21 - 2 * numSpaces, "*")
)
