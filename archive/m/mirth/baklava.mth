module sample-programs.baklava

import std.prelude
import std.world
import std.list
import std.str

||| stack: n
def abs [Int -- Int] {
    ||| if n < 0 then -n else n
    dup 0 < if(-1 *, dup drop)
}

||| stack: n (count), s (string)
def repeat-string [Int Str -- Str] {
    "" 1                    ||| stack: n, s, result = "", 1
    rot4l                   ||| stack: s, result, 1, n
    range for(              ||| stack: s, result
                            ||| for i = 1 to n:
                            |||     stack: s, result, i
        drop                |||     stack: s, result
        over                |||     stack: s, result, s
        cat                 |||     stack: s, result = result + s
    )
    swap                    ||| stack: result, s
    drop                    ||| stack: result
}

||| stack: n
def baklava-line [Int -- Str] {
    abs                 ||| stack: num-spaces = abs(n)
    dup                 ||| stack: num-spaces, num-spaces
    " " repeat-string   ||| stack: num-spaces, spaces = num-spaces " "
    swap                ||| stack: spaces, num-spaces
    -2 * 21 +           ||| stack: spaces, num-stars = 21 - 2 * num-spaces
    "*" repeat-string   ||| stack: spaces, stars = num-stars "*"
    cat                 ||| stack: spaces + stars
}

def main {
    ||| for n = -10 to 10:
    |||    print baklava-line(n)
    -10 10 range for(baklava-line print)
}
